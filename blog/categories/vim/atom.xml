<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: vim | Jordan Rogers-Smith]]></title>
  <link href="http://jordanrs.github.io/blog/categories/vim/atom.xml" rel="self"/>
  <link href="http://jordanrs.github.io/"/>
  <updated>2014-05-03T10:45:09+01:00</updated>
  <id>http://jordanrs.github.io/</id>
  <author>
    <name><![CDATA[Jordan Rogers-Smith]]></name>
    <email><![CDATA[jordanrs2k1@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vim Cheat Sheet]]></title>
    <link href="http://jordanrs.github.io/blog/2013/09/23/vim-shortcuts/"/>
    <updated>2013-09-23T09:10:00+01:00</updated>
    <id>http://jordanrs.github.io/blog/2013/09/23/vim-shortcuts</id>
    <content type="html"><![CDATA[<hr />

<h2>Basic Commands</h2>

<p>i = insert mode</p>

<p>h,j,k,l = move left, up, down, left<br/>
w = move from word to word<br/>
b = move back word to word<br/>
W = jumps the whole word<br/>
B = jusmps back a word to word</p>

<p>$ = go to end of the line<br/>
^ = go to the begining of the line<br/>
0 = goes to the very beginning</p>

<p>gg = goes to the begginig of the file<br/>
G = goes to the bottom of the file<br/>
{ } = jumps paragraphs</p>

<p>f = finds the first occurence of a string in the file<br/>
F = fins the first occurance of a string backward</p>

<p>number followed by comman (4dd) &ndash; deletes four lines</p>

<p>3gg = goes 3 lines from the top <br/>
:13 = goes to line 13<br/>
3 G = goes three lines from the bottom</p>

<!-- more -->


<hr />

<h2>Advanced Movement</h2>

<p>ctrl d &ndash; moves half screen down<br/>
ctrl u &ndash; moves half screen up<br/>
ctrl f &ndash; full screen forward<br/>
ctrl b &ndash; full screen backward</p>

<p>M &ndash; goes to middle of the window<br/>
H &ndash; goes to top of window<br/>
L &ndash; goes to last line of window<br/>
3L &ndash; goes three lines above bottom of window</p>

<p>zt &ndash; moves the line our cursor is on to the top<br/>
zb &ndash; moves the line to the botton<br/>
zz &ndash; moves the line to the middle</p>

<p>ma &ndash; saves cursor position to a register<br/>
&lsquo;a &ndash; goes directly to register a<br/>
&rsquo; &ndash; move between markers</p>

<hr />

<h2>Basic Editing</h2>

<p>X &ndash; deletes behind the cursor<br/>
x &ndash; delete whats under the cursor<br/>
dd &ndash; delete the line<br/>
dw &ndash; delete the word<br/>
db &ndash; delete previous word</p>

<p>cc &ndash; delete line and enter insert mode<br/>
cw &ndash; delete work and enter insert mode<br/>
cd &ndash; delete previous word and enter insert mode</p>

<p>ci" &ndash; changes whats inbetween two &ldquo;<br/>
ca&rdquo; &ndash; deletes everything inside the quotes</p>

<hr />

<h2>Cut, Copy and Paste</h2>

<p>Every deletion is a cut command, puts in a special register for pasting later</p>

<p>p &ndash; pastes last thing in deletion cut register
P &ndash; pastes before the cursor
y &ndash; yank/copy something copy can be used with any familiar command<br/>
yw &ndash; copy word <br/>
yy &ndash; copy line</p>

<hr />

<h2>Search</h2>

<p>/search = starts searching for word search. it is also case sensitive<br/>
?search = looks backwards for the word search<br/>
set incsearch = sets incremental search on <br/>
set ignorecase = turns off case sensitive search<br/>
set hlsearch = turns on highlight search<br/>
nohlsearch / noh = turns off highlight search<br/>
n = find next occurence. vim stores the last search<br/>
c/find = will delete from the cursor to find and then enter insert mode</p>

<p>vim search can use regexs</p>

<hr />

<h2>Search and Replace</h2>

<p>:s/pattern/replace/flags<br/>
:s &ndash; perfoms a substitutions replaces on first occurance by default<br/>
:s/vim/Vim &ndash; replaces vim for Vim<br/>
:%s/vim/Vim &ndash; replaces whole file with vim for Vim<br/>
:%s/vim/Vim/g &ndash; replaces whole file with vim for Vim globally</p>

<p>vim will use previous serach pattern so can do :s//pattern<br/>
when using regex can use \ze or \zs to stop selection before or after</p>

<p>Visual mode &ndash; v<br/>
visual line mode &ndash; V</p>

<p>gv &ndash; reslects last selection</p>

<p>go to a bracket, enter visual mode hit % and that will find the corresponding bracket</p>

<p>FLAGS</p>

<p>c = confirm, asks for confirmation for oeach occurence<br/>
i = insensitive<br/>
g = finds all occurances in a line</p>

<p>HELP</p>

<p>:help s &ndash; opens the help for a command</p>

<hr />

<h2>Macros and Register</h2>

<p>ctrl g &ndash; get file info</p>

<p>macros store a command pipeline that can be used over and over</p>

<p>qa &ndash; start recording a macro in register a<br/>
q &ndash; stops recroding<br/>
:registers / reg &ndash; shows the recorded registers<br/>
@a &ndash; runs macro in a register<br/>
@@ &ndash; runts the last macro ran again</p>

<hr />

<h2>Command Line in Vim</h2>

<p>:! &ndash; initalises comman from the shell then run command<br/>
:read !date &ndash; puts the oupt of shell into the file under cursor<br/>
:r !curl &mdash;silent URL &ndash; outputs the file into the buffer<br/>
you can take the selected text buffer and feed it into standard in and replace it with output</p>

<hr />

<h2>Navigating Between Buffers</h2>

<p>:ls &ndash; lists all active buffers for files in memory<br/>
:bn / bnext &ndash; next buffer<br/>
:bp / bprev &ndash; previous buffer<br/>
:b# &ndash; last buffer we visited<br/>
:bf &ndash; first buffer</p>

<p>:bd 14 &ndash; deletes buffer 14</p>

<hr />

<h2>Windows and Tabs</h2>

<p>Split windows</p>

<p>:vsplit / vs file_path &ndash; splits the buffer vertically
ctrl+w h/l = move between left right<br/>
ctrl+w H / L = move to the left / right most part<br/>
ctrl + w J/K = move to the bottom / top<br/>
ctrl + w +/&ndash; = increase/decrease window hight 1 row<br/>
ctrl + w </> = increase/decrease width by 1 column<br/>
ctrl + w = = auto resize windows equally<br/>
:q = clost a window buffer</p>

<p>:sb 2 = split buffer in memory<br/>
:vert sb = vetical split buffer in memory</p>

<p>Tabs</p>

<p>:tab e / tabedit file_path<br/>
:gt &ndash; move oen tab forward<br/>
:gT &ndash; move one tab backward</p>

<hr />

<h2>Graphical Vim</h2>

<p>set gfn &ndash; sets current font</p>

<hr />

<h2>Indents and Folds </h2>

<p>:set list &ndash; prnts lines/tabs/space<br/>
>> &ndash; indent of one tab<br/>
8>> &ndash; indents following 8 lines<br/>
:set expandtab &ndash; sets soft tabs<br/>
:set noexpandtab &ndash; sets tabs normal<br/>
:set shiftwidth=3 &ndash; 3 spaces for one indentation<br/>
:set smartindent &ndash; sets smart indentation<br/>
:set softtabstop / sts 3</p>

<p>in visual mode &ndash;</p>

<p>gv &ndash; reselects last selection<br/>
>/&lt; &ndash; indents</p>

<p>Auto indent
= on select texted auto indent<br/>
=3j auto indent next 2 lines<br/>
=G indents the whole file</p>

<p>In inset mode
tab = inserts<br/>
ctrl + t = indent forward<br/>
ctrl + d = indent back</p>

<p>Folding</p>

<p>manual folds
zf5j &ndash; fold the next 5 lines<br/>
zo &ndash; open fold<br/>
zO &ndash; open from cursor fown<br/>
zc &ndash; close everything from position up fold<br/>
zd &ndash; delete fold<br/>
zf% &ndash; folds the matching bracket<br/>
zi &ndash; inverts folding on/off</p>

<p>auto folding</p>

<p>set foldmethod/fdm &ndash; numberous options see help foldmethod<br/>
set fdm=sytax = fold baed on syntax<br/>
set fdm=marker = set a custom folder maker } for instace</p>

<hr />

<h2>.vimrc File</h2>

<p>:so % &ndash; source our current file</p>

<p>set nocompatible &ndash; sets vims way of doing things</p>

<p>allows file types to be detected than plugins and indentation set up based on those files</p>

<p>filetype on<br/>
filetype indent on<br/>
filetype  plugin on</p>

<p>let VARIAABLE &ndash; &ldquo;."<br/>
syntax enable</p>

<p>set ignorecase<br/>
set hlsearch<br/>
set autoindent<br/>
set fileencoding=utf-8<br/>
set encoding=utf-8<br/>
set backspace=indent.eol.start</p>

<p>set smartcase &ndash; perform smart searchs<br/>
gdefault &ndash; perform global replacments<br/>
set incsearch<br/>
set showmatch &ndash; highlight all matching parentheses</p>

<p>deals with how windows are auto sized<br/>
set winwidth=84<br/>
set winheight=5<br/>
set winminheight=5<br/>
set winheight=999</p>

<p>set no/list &ndash; view all tabs and line endings<br/>
set guifont= &ndash; sets the font <br/>
set guioptions= add options<br/>
set guioptions-= remove options<br/>
set number &ndash; set line numbers<br/>
set visualbell &ndash; flash the screen over the bell<br/>
set cursoline &ndash; highlight line your in</p>

<p>set cc=80 &ndash; sets line at 80th column<br/>
set background=dark<br/>
colorschmeme solarized</p>

<p>au BufRead,BufNewFil *.ru setfiletype ruby</p>

<hr />

<h2>Mappings</h2>

<p>sequence of characters that triggers sequence of commands</p>
]]></content>
  </entry>
  
</feed>
