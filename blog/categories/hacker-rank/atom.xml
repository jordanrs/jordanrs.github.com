<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: hacker rank | Jordan Rogers-Smith]]></title>
  <link href="http://jordanrs.github.io/blog/categories/hacker-rank/atom.xml" rel="self"/>
  <link href="http://jordanrs.github.io/"/>
  <updated>2014-05-26T19:57:36+01:00</updated>
  <id>http://jordanrs.github.io/</id>
  <author>
    <name><![CDATA[Jordan Rogers-Smith]]></name>
    <email><![CDATA[jordanrs2k1@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Hacker Rank Solutions: Missing Numbers]]></title>
    <link href="http://jordanrs.github.io/blog/2014/05/26/hacker-rank-solutions-missing-numbers/"/>
    <updated>2014-05-26T18:55:00+01:00</updated>
    <id>http://jordanrs.github.io/blog/2014/05/26/hacker-rank-solutions-missing-numbers</id>
    <content type="html"><![CDATA[<p><a href="https://www.hackerrank.com/challenges/missing-numbers">Hacker Rank Solutions: Missing Numbers</a></p>

<p>``` ruby
list_1_length = $stdin.gets.to_i</p>

<p>list1 = $stdin.gets.chomp.split(&lsquo; &rsquo;)</p>

<p>list_2_length = $stdin.gets.to_i</p>

<p>list2 = $stdin.gets.chomp.split(&lsquo; &rsquo;)</p>

<p>list1hash = {}
list2hash = {}</p>

<p>times = list_1_length > list_2_length ? list_1_length : list_2_length</p>

<p>times.times do |i|
  if list1[i] != nil</p>

<pre><code>n = list1[i]
if list1hash[n] == nil
  list1hash[n] = 1
else
  list1hash[n] += 1
end
</code></pre>

<p>  end</p>

<p>  if list2[i] != nil</p>

<pre><code>n = list2[i]
if list2hash[n] == nil
  list2hash[n] = 1
else
  list2hash[n] += 1
end
</code></pre>

<p>  end
end</p>

<p>if list1hash.length > list2hash.length
  biggest = list1hash
  smallest = list2hash
else
  smallest = list1hash
  biggest = list2hash
end</p>

<p>arr = []
biggest.each do |k, v|
  arr &lt;&lt; k.to_i if smallest[k] != v
end</p>

<p>puts arr.sort.join(&lsquo; &rsquo;)</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hacker Rank Solutions: Lonely Integer]]></title>
    <link href="http://jordanrs.github.io/blog/2014/05/26/hacker-rank-solutions-lonely-integer/"/>
    <updated>2014-05-26T18:55:00+01:00</updated>
    <id>http://jordanrs.github.io/blog/2014/05/26/hacker-rank-solutions-lonely-integer</id>
    <content type="html"><![CDATA[<p><a href="https://www.hackerrank.com/challenges/lonely-integer">Hacker Rank Solutions: Lonely Integer</a></p>

<p>``` ruby
def lonelyinteger(array)
  found = []</p>

<p>  array.each do |i|</p>

<pre><code>if found[i] == nil
  found[i] = 1
elsif found[i] == 1
  found.delete(i)
end
</code></pre>

<p>  end</p>

<p>  puts found.first
end</p>

<p>a = gets.strip.to_i
b = gets.strip.split(&ldquo; &rdquo;).map! {|i| i.to_i}
print lonelyinteger(b)
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hacker Rank Solutions: Filling Jars]]></title>
    <link href="http://jordanrs.github.io/blog/2014/05/26/hacker-rank-solutions-filling-jars/"/>
    <updated>2014-05-26T18:55:00+01:00</updated>
    <id>http://jordanrs.github.io/blog/2014/05/26/hacker-rank-solutions-filling-jars</id>
    <content type="html"><![CDATA[<p><a href="https://www.hackerrank.com/challenges/filling-jars">Hacker Rank Solutions: Filling Jars</a></p>

<p>``` ruby
jars, moves = $stdin.gets.chomp.split(&lsquo; &rsquo;).collect { |x| x.to_i}
total = 0
moves.times do |x|
  jar1, jar2, ammount = $stdin.gets.chomp.split(&lsquo; &rsquo;).collect { |x| x.to_i }
  no_of_jars = (jar2 &ndash; jar1) + 1</p>

<p>  total = total + ( no_of_jars * ammount )
end</p>

<p>puts (total / jars).floor
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hacker Rank Solutions: Angry Children]]></title>
    <link href="http://jordanrs.github.io/blog/2014/05/26/hacker-rank-solutions-angry-children/"/>
    <updated>2014-05-26T18:55:00+01:00</updated>
    <id>http://jordanrs.github.io/blog/2014/05/26/hacker-rank-solutions-angry-children</id>
    <content type="html"><![CDATA[<p><a href="https://www.hackerrank.com/challenges/angry-children">Hacker Rank Solutions: Angry Children</a></p>

<p>``` ruby
  n = gets.to_i
  k = gets.to_i
  candy = []
  n.times do |i|</p>

<pre><code>candy[i] = gets.to_i
</code></pre>

<p>  end</p>

<p>  candy.sort!</p>

<p>  # sliding widow
  j = k
  i = 0
  lowest_dif = Float::INFINITY</p>

<p>  while j &lt;= candy.length do</p>

<pre><code>dif = candy[j - 1] - candy[i]
lowest_dif = dif if dif &lt; lowest_dif

break if lowest_dif == 0

j += 1
i += 1
</code></pre>

<p>  end</p>

<p>  puts lowest_dif</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hacker Rank Solutions: Utopian Tree]]></title>
    <link href="http://jordanrs.github.io/blog/2014/05/26/hacker-rank-solutions-utopian-tree/"/>
    <updated>2014-05-26T18:49:00+01:00</updated>
    <id>http://jordanrs.github.io/blog/2014/05/26/hacker-rank-solutions-utopian-tree</id>
    <content type="html"><![CDATA[<p><a href="https://www.hackerrank.com/challenges/utopian-tree">Hacker Rank Solutions: Utopian Tree</a></p>

<p>``` ruby
test_cases = $stdin.gets.chomp.to_i</p>

<p>test_cases.times do
  years = $stdin.gets.chomp
  sum = 1
  years.to_i.times do |i|</p>

<pre><code>if i % 2 == 0
  sum *= 2
else
  sum += 1
end
</code></pre>

<p>  end
  $stdout.puts sum
end</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
